#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebHocAnhVanNew.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebHocAV")]
	public partial class MyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertNoiDungKH(NoiDungKH instance);
    partial void UpdateNoiDungKH(NoiDungKH instance);
    partial void DeleteNoiDungKH(NoiDungKH instance);
    partial void InsertLoaiTK(LoaiTK instance);
    partial void UpdateLoaiTK(LoaiTK instance);
    partial void DeleteLoaiTK(LoaiTK instance);
    partial void InsertKhoaHoc(KhoaHoc instance);
    partial void UpdateKhoaHoc(KhoaHoc instance);
    partial void DeleteKhoaHoc(KhoaHoc instance);
    partial void InsertGiangvien(Giangvien instance);
    partial void UpdateGiangvien(Giangvien instance);
    partial void DeleteGiangvien(Giangvien instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    #endregion
		
		public MyDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<NoiDungKH> NoiDungKHs
		{
			get
			{
				return this.GetTable<NoiDungKH>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTK> LoaiTKs
		{
			get
			{
				return this.GetTable<LoaiTK>();
			}
		}
		
		public System.Data.Linq.Table<KhoaHoc> KhoaHocs
		{
			get
			{
				return this.GetTable<KhoaHoc>();
			}
		}
		
		public System.Data.Linq.Table<Giangvien> Giangviens
		{
			get
			{
				return this.GetTable<Giangvien>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoiDungKH")]
	public partial class NoiDungKH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBai;
		
		private string _NoiDung;
		
		private System.Nullable<int> _IdKhoaHoc;
		
		private EntityRef<KhoaHoc> _KhoaHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBaiChanging(int value);
    partial void OnIdBaiChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnIdKhoaHocChanging(System.Nullable<int> value);
    partial void OnIdKhoaHocChanged();
    #endregion
		
		public NoiDungKH()
		{
			this._KhoaHoc = default(EntityRef<KhoaHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBai
		{
			get
			{
				return this._IdBai;
			}
			set
			{
				if ((this._IdBai != value))
				{
					this.OnIdBaiChanging(value);
					this.SendPropertyChanging();
					this._IdBai = value;
					this.SendPropertyChanged("IdBai");
					this.OnIdBaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(50)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhoaHoc", DbType="Int")]
		public System.Nullable<int> IdKhoaHoc
		{
			get
			{
				return this._IdKhoaHoc;
			}
			set
			{
				if ((this._IdKhoaHoc != value))
				{
					if (this._KhoaHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._IdKhoaHoc = value;
					this.SendPropertyChanged("IdKhoaHoc");
					this.OnIdKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_NoiDungKH", Storage="_KhoaHoc", ThisKey="IdKhoaHoc", OtherKey="IdKhoaHoc", IsForeignKey=true)]
		public KhoaHoc KhoaHoc
		{
			get
			{
				return this._KhoaHoc.Entity;
			}
			set
			{
				KhoaHoc previousValue = this._KhoaHoc.Entity;
				if (((previousValue != value) 
							|| (this._KhoaHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhoaHoc.Entity = null;
						previousValue.NoiDungKHs.Remove(this);
					}
					this._KhoaHoc.Entity = value;
					if ((value != null))
					{
						value.NoiDungKHs.Add(this);
						this._IdKhoaHoc = value.IdKhoaHoc;
					}
					else
					{
						this._IdKhoaHoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhoaHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTK")]
	public partial class LoaiTK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLoai;
		
		private string _LoaiTK1;
		
		private EntitySet<AspNetUser> _AspNetUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLoaiChanging(int value);
    partial void OnIdLoaiChanged();
    partial void OnLoaiTK1Changing(string value);
    partial void OnLoaiTK1Changed();
    #endregion
		
		public LoaiTK()
		{
			this._AspNetUsers = new EntitySet<AspNetUser>(new Action<AspNetUser>(this.attach_AspNetUsers), new Action<AspNetUser>(this.detach_AspNetUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdLoai
		{
			get
			{
				return this._IdLoai;
			}
			set
			{
				if ((this._IdLoai != value))
				{
					this.OnIdLoaiChanging(value);
					this.SendPropertyChanging();
					this._IdLoai = value;
					this.SendPropertyChanged("IdLoai");
					this.OnIdLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LoaiTK", Storage="_LoaiTK1", DbType="NVarChar(50)")]
		public string LoaiTK1
		{
			get
			{
				return this._LoaiTK1;
			}
			set
			{
				if ((this._LoaiTK1 != value))
				{
					this.OnLoaiTK1Changing(value);
					this.SendPropertyChanging();
					this._LoaiTK1 = value;
					this.SendPropertyChanged("LoaiTK1");
					this.OnLoaiTK1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTK_AspNetUser", Storage="_AspNetUsers", ThisKey="IdLoai", OtherKey="IdLoai")]
		public EntitySet<AspNetUser> AspNetUsers
		{
			get
			{
				return this._AspNetUsers;
			}
			set
			{
				this._AspNetUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUsers(AspNetUser entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTK = this;
		}
		
		private void detach_AspNetUsers(AspNetUser entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoaHocs")]
	public partial class KhoaHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdKhoaHoc;
		
		private string _TenKhoaHoc;
		
		private string _Mota;
		
		private System.Nullable<decimal> _Gia;
		
		private string _NgayXuatBan;
		
		private string _Hinh;
		
		private System.Nullable<int> _IdGV;
		
		private EntitySet<NoiDungKH> _NoiDungKHs;
		
		private EntityRef<Giangvien> _Giangvien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdKhoaHocChanging(int value);
    partial void OnIdKhoaHocChanged();
    partial void OnTenKhoaHocChanging(string value);
    partial void OnTenKhoaHocChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    partial void OnNgayXuatBanChanging(string value);
    partial void OnNgayXuatBanChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    partial void OnIdGVChanging(System.Nullable<int> value);
    partial void OnIdGVChanged();
    #endregion
		
		public KhoaHoc()
		{
			this._NoiDungKHs = new EntitySet<NoiDungKH>(new Action<NoiDungKH>(this.attach_NoiDungKHs), new Action<NoiDungKH>(this.detach_NoiDungKHs));
			this._Giangvien = default(EntityRef<Giangvien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhoaHoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdKhoaHoc
		{
			get
			{
				return this._IdKhoaHoc;
			}
			set
			{
				if ((this._IdKhoaHoc != value))
				{
					this.OnIdKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._IdKhoaHoc = value;
					this.SendPropertyChanged("IdKhoaHoc");
					this.OnIdKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoaHoc", DbType="NVarChar(100)")]
		public string TenKhoaHoc
		{
			get
			{
				return this._TenKhoaHoc;
			}
			set
			{
				if ((this._TenKhoaHoc != value))
				{
					this.OnTenKhoaHocChanging(value);
					this.SendPropertyChanging();
					this._TenKhoaHoc = value;
					this.SendPropertyChanged("TenKhoaHoc");
					this.OnTenKhoaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(255)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuatBan", DbType="NVarChar(100)")]
		public string NgayXuatBan
		{
			get
			{
				return this._NgayXuatBan;
			}
			set
			{
				if ((this._NgayXuatBan != value))
				{
					this.OnNgayXuatBanChanging(value);
					this.SendPropertyChanging();
					this._NgayXuatBan = value;
					this.SendPropertyChanged("NgayXuatBan");
					this.OnNgayXuatBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="NVarChar(500)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGV", DbType="Int")]
		public System.Nullable<int> IdGV
		{
			get
			{
				return this._IdGV;
			}
			set
			{
				if ((this._IdGV != value))
				{
					if (this._Giangvien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGVChanging(value);
					this.SendPropertyChanging();
					this._IdGV = value;
					this.SendPropertyChanged("IdGV");
					this.OnIdGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhoaHoc_NoiDungKH", Storage="_NoiDungKHs", ThisKey="IdKhoaHoc", OtherKey="IdKhoaHoc")]
		public EntitySet<NoiDungKH> NoiDungKHs
		{
			get
			{
				return this._NoiDungKHs;
			}
			set
			{
				this._NoiDungKHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giangvien_KhoaHoc", Storage="_Giangvien", ThisKey="IdGV", OtherKey="IdGV", IsForeignKey=true)]
		public Giangvien Giangvien
		{
			get
			{
				return this._Giangvien.Entity;
			}
			set
			{
				Giangvien previousValue = this._Giangvien.Entity;
				if (((previousValue != value) 
							|| (this._Giangvien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Giangvien.Entity = null;
						previousValue.KhoaHocs.Remove(this);
					}
					this._Giangvien.Entity = value;
					if ((value != null))
					{
						value.KhoaHocs.Add(this);
						this._IdGV = value.IdGV;
					}
					else
					{
						this._IdGV = default(Nullable<int>);
					}
					this.SendPropertyChanged("Giangvien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NoiDungKHs(NoiDungKH entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = this;
		}
		
		private void detach_NoiDungKHs(NoiDungKH entity)
		{
			this.SendPropertyChanging();
			entity.KhoaHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Giangvien")]
	public partial class Giangvien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdGV;
		
		private string _HoTenGV;
		
		private string _SDT;
		
		private string _DCGV;
		
		private string _NgaySinhGV;
		
		private string _Id;
		
		private EntitySet<KhoaHoc> _KhoaHocs;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGVChanging(int value);
    partial void OnIdGVChanged();
    partial void OnHoTenGVChanging(string value);
    partial void OnHoTenGVChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDCGVChanging(string value);
    partial void OnDCGVChanged();
    partial void OnNgaySinhGVChanging(string value);
    partial void OnNgaySinhGVChanged();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    #endregion
		
		public Giangvien()
		{
			this._KhoaHocs = new EntitySet<KhoaHoc>(new Action<KhoaHoc>(this.attach_KhoaHocs), new Action<KhoaHoc>(this.detach_KhoaHocs));
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdGV
		{
			get
			{
				return this._IdGV;
			}
			set
			{
				if ((this._IdGV != value))
				{
					this.OnIdGVChanging(value);
					this.SendPropertyChanging();
					this._IdGV = value;
					this.SendPropertyChanged("IdGV");
					this.OnIdGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenGV", DbType="NVarChar(100)")]
		public string HoTenGV
		{
			get
			{
				return this._HoTenGV;
			}
			set
			{
				if ((this._HoTenGV != value))
				{
					this.OnHoTenGVChanging(value);
					this.SendPropertyChanging();
					this._HoTenGV = value;
					this.SendPropertyChanged("HoTenGV");
					this.OnHoTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(10)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCGV", DbType="NVarChar(100)")]
		public string DCGV
		{
			get
			{
				return this._DCGV;
			}
			set
			{
				if ((this._DCGV != value))
				{
					this.OnDCGVChanging(value);
					this.SendPropertyChanging();
					this._DCGV = value;
					this.SendPropertyChanged("DCGV");
					this.OnDCGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhGV", DbType="NVarChar(50)")]
		public string NgaySinhGV
		{
			get
			{
				return this._NgaySinhGV;
			}
			set
			{
				if ((this._NgaySinhGV != value))
				{
					this.OnNgaySinhGVChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhGV = value;
					this.SendPropertyChanged("NgaySinhGV");
					this.OnNgaySinhGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128)")]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Giangvien_KhoaHoc", Storage="_KhoaHocs", ThisKey="IdGV", OtherKey="IdGV")]
		public EntitySet<KhoaHoc> KhoaHocs
		{
			get
			{
				return this._KhoaHocs;
			}
			set
			{
				this._KhoaHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_Giangvien", Storage="_AspNetUser", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.Giangviens.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.Giangviens.Add(this);
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhoaHocs(KhoaHoc entity)
		{
			this.SendPropertyChanging();
			entity.Giangvien = this;
		}
		
		private void detach_KhoaHocs(KhoaHoc entity)
		{
			this.SendPropertyChanging();
			entity.Giangvien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _madon;
		
		private System.Nullable<bool> _thanhtoan;
		
		private string _giaohang;
		
		private System.Nullable<System.DateTime> _ngaydat;
		
		private string _id;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmadonChanging(int value);
    partial void OnmadonChanged();
    partial void OnthanhtoanChanging(System.Nullable<bool> value);
    partial void OnthanhtoanChanged();
    partial void OngiaohangChanging(string value);
    partial void OngiaohangChanged();
    partial void OnngaydatChanging(System.Nullable<System.DateTime> value);
    partial void OnngaydatChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    #endregion
		
		public DonHang()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_madon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int madon
		{
			get
			{
				return this._madon;
			}
			set
			{
				if ((this._madon != value))
				{
					this.OnmadonChanging(value);
					this.SendPropertyChanging();
					this._madon = value;
					this.SendPropertyChanged("madon");
					this.OnmadonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtoan", DbType="Bit")]
		public System.Nullable<bool> thanhtoan
		{
			get
			{
				return this._thanhtoan;
			}
			set
			{
				if ((this._thanhtoan != value))
				{
					this.OnthanhtoanChanging(value);
					this.SendPropertyChanging();
					this._thanhtoan = value;
					this.SendPropertyChanged("thanhtoan");
					this.OnthanhtoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_giaohang", DbType="NChar(10)")]
		public string giaohang
		{
			get
			{
				return this._giaohang;
			}
			set
			{
				if ((this._giaohang != value))
				{
					this.OngiaohangChanging(value);
					this.SendPropertyChanging();
					this._giaohang = value;
					this.SendPropertyChanged("giaohang");
					this.OngiaohangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaydat", DbType="Date")]
		public System.Nullable<System.DateTime> ngaydat
		{
			get
			{
				return this._ngaydat;
			}
			set
			{
				if ((this._ngaydat != value))
				{
					this.OnngaydatChanging(value);
					this.SendPropertyChanging();
					this._ngaydat = value;
					this.SendPropertyChanged("ngaydat");
					this.OnngaydatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(128)")]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_DonHang", Storage="_AspNetUser", ThisKey="id", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._id = value.Id;
					}
					else
					{
						this._id = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang
	{
		
		private int _madon;
		
		private System.Nullable<int> _IdKhoaHoc;
		
		private System.Nullable<decimal> _gia;
		
		private System.Nullable<int> _soluong;
		
		public ChiTietDonHang()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_madon", DbType="Int NOT NULL")]
		public int madon
		{
			get
			{
				return this._madon;
			}
			set
			{
				if ((this._madon != value))
				{
					this._madon = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKhoaHoc", DbType="Int")]
		public System.Nullable<int> IdKhoaHoc
		{
			get
			{
				return this._IdKhoaHoc;
			}
			set
			{
				if ((this._IdKhoaHoc != value))
				{
					this._IdKhoaHoc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> gia
		{
			get
			{
				return this._gia;
			}
			set
			{
				if ((this._gia != value))
				{
					this._gia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soluong", DbType="Int")]
		public System.Nullable<int> soluong
		{
			get
			{
				return this._soluong;
			}
			set
			{
				if ((this._soluong != value))
				{
					this._soluong = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private System.Nullable<int> _IdLoai;
		
		private EntitySet<Giangvien> _Giangviens;
		
		private EntitySet<DonHang> _DonHangs;
		
		private EntityRef<LoaiTK> _LoaiTK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnIdLoaiChanging(System.Nullable<int> value);
    partial void OnIdLoaiChanged();
    #endregion
		
		public AspNetUser()
		{
			this._Giangviens = new EntitySet<Giangvien>(new Action<Giangvien>(this.attach_Giangviens), new Action<Giangvien>(this.detach_Giangviens));
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			this._LoaiTK = default(EntityRef<LoaiTK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoai", DbType="Int")]
		public System.Nullable<int> IdLoai
		{
			get
			{
				return this._IdLoai;
			}
			set
			{
				if ((this._IdLoai != value))
				{
					if (this._LoaiTK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLoaiChanging(value);
					this.SendPropertyChanging();
					this._IdLoai = value;
					this.SendPropertyChanged("IdLoai");
					this.OnIdLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_Giangvien", Storage="_Giangviens", ThisKey="Id", OtherKey="Id")]
		public EntitySet<Giangvien> Giangviens
		{
			get
			{
				return this._Giangviens;
			}
			set
			{
				this._Giangviens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_DonHang", Storage="_DonHangs", ThisKey="Id", OtherKey="id")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTK_AspNetUser", Storage="_LoaiTK", ThisKey="IdLoai", OtherKey="IdLoai", IsForeignKey=true)]
		public LoaiTK LoaiTK
		{
			get
			{
				return this._LoaiTK.Entity;
			}
			set
			{
				LoaiTK previousValue = this._LoaiTK.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTK.Entity = null;
						previousValue.AspNetUsers.Remove(this);
					}
					this._LoaiTK.Entity = value;
					if ((value != null))
					{
						value.AspNetUsers.Add(this);
						this._IdLoai = value.IdLoai;
					}
					else
					{
						this._IdLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiTK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Giangviens(Giangvien entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_Giangviens(Giangvien entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
}
#pragma warning restore 1591
